name: Deploy to Google Cloud Functions

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  deploy:
    name: Deploy Cloud Functions
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest  # For future testing

      # Create service account key file from secret
      - name: Create service account key file
        run: echo '${{ secrets.GCP_SA_KEY }}' > sa-key.json

      # Authenticate with explicit path to key file
      - name: Authenticate to Google Cloud
        run: |
          gcloud auth activate-service-account --key-file=sa-key.json
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

      # Deploy Functions - assumes all APIs are already enabled manually
      - name: Deploy Appointment Types Service
        run: |
          gcloud functions deploy appointment-types-service \
            --gen2 \
            --runtime python311 \
            --trigger-http \
            --allow-unauthenticated \
            --entry-point appointment_types_service \
            --source . \
            --region us-central1 \
            --set-env-vars FIREBASE_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}

      - name: Deploy Providers Service
        run: |
          gcloud functions deploy providers-service \
            --gen2 \
            --runtime python311 \
            --trigger-http \
            --allow-unauthenticated \
            --entry-point providers_service \
            --source . \
            --region us-central1 \
            --set-env-vars FIREBASE_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}

      - name: Deploy Customers Service
        run: |
          gcloud functions deploy customers-service \
            --gen2 \
            --runtime python311 \
            --trigger-http \
            --allow-unauthenticated \
            --entry-point customers_service \
            --source . \
            --region us-central1 \
            --set-env-vars FIREBASE_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}

      - name: Deploy Appointments Service
        run: |
          gcloud functions deploy appointments-service \
            --gen2 \
            --runtime python311 \
            --trigger-http \
            --allow-unauthenticated \
            --entry-point appointments_service \
            --source . \
            --region us-central1 \
            --set-env-vars FIREBASE_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}
            
      - name: Output Service URLs
        run: |
          echo "Appointment Types Service: $(gcloud functions describe appointment-types-service --region us-central1 --format='value(httpsTrigger.url)')"
          echo "Providers Service: $(gcloud functions describe providers-service --region us-central1 --format='value(httpsTrigger.url)')"
          echo "Customers Service: $(gcloud functions describe customers-service --region us-central1 --format='value(httpsTrigger.url)')"
          echo "Appointments Service: $(gcloud functions describe appointments-service --region us-central1 --format='value(httpsTrigger.url)')"

      # Cleanup service account key file
      - name: Remove service account key file
        if: always()
        run: rm -f sa-key.json 